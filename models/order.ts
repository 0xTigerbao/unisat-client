/* tslint:disable */
/* eslint-disable */
/**
 * UniSat Wallet - OpenAPI
 * This is UniSat Wallet Open API. If you wish to use the OpenAPI, please feel free to send us an email, and we will provide you with an API KEY.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: contact@unisat.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

import { OrderFiles } from './order-files';
import {
    OrderFiles,
} from ".";

/**
 * 
 *
 * @export
 * @interface Order
 */
export interface Order {

    /**
     * @type {string}
     * @memberof Order
     */
    orderId?: string;

    /**
     * Order Status
     *
     * @type {string}
     * @memberof Order
     * @example pending
     */
    status?: OrderStatusEnum;

    /**
     * Pay to this address to start inscribing
     *
     * @type {string}
     * @memberof Order
     */
    payAddress?: string;

    /**
     * Bitcoin address to receive the inscriptions
     *
     * @type {string}
     * @memberof Order
     */
    receiveAddress?: string;

    /**
     * The BTC amount (in satoshis) need to pay
     *
     * @type {number}
     * @memberof Order
     * @example 3000
     */
    amount?: number;

    /**
     * The paid BTC amount (in satoshis)
     *
     * @type {number}
     * @memberof Order
     */
    paidAmount?: number;

    /**
     * The outputValue of each inscription
     *
     * @type {number}
     * @memberof Order
     */
    outputValue?: number;

    /**
     * The feeRate of inscribing transactions
     *
     * @type {number}
     * @memberof Order
     */
    feeRate?: number;

    /**
     * The miner fee of this order
     *
     * @type {number}
     * @memberof Order
     */
    minerFee?: number;

    /**
     * The service fee of this order
     *
     * @type {number}
     * @memberof Order
     */
    serviceFee?: number;

    /**
     * The developer fee of this order
     *
     * @type {number}
     * @memberof Order
     */
    devFee?: number;

    /**
     * @type {Array<OrderFiles>}
     * @memberof Order
     */
    files?: Array<OrderFiles>;

    /**
     * The total inscriptions count
     *
     * @type {number}
     * @memberof Order
     * @example 1
     */
    count?: number;

    /**
     * The pending inscriptions count
     *
     * @type {number}
     * @memberof Order
     * @example 1
     */
    pendingCount?: number;

    /**
     * The unconfirmed inscriptions count
     *
     * @type {number}
     * @memberof Order
     * @example 0
     */
    unconfirmedCount?: number;

    /**
     * The confirmed inscriptions count
     *
     * @type {number}
     * @memberof Order
     * @example 0
     */
    confirmedCount?: number;

    /**
     * @type {number}
     * @memberof Order
     * @example 1693439128100
     */
    createTime?: number;

    /**
     * @type {string}
     * @memberof Order
     */
    refundTxid?: string;

    /**
     * @type {number}
     * @memberof Order
     */
    refundAmount?: number;

    /**
     * @type {number}
     * @memberof Order
     */
    refundFeeRate?: number;
}

/**
 * @export
 * @enum {string}
 */
export enum OrderStatusEnum {
    Pending = 'pending',
    Inscribing = 'inscribing',
    Minted = 'minted'
}

